# Using GitHub merge queues

>ðŸš§ GitHub beta feature
> The pull request merge queue feature is in public beta and subject to change.

Merge queues increase the efficiency and stability of your delivery workflows by automatically handling pull request merges into your busiest branches. They ensure pull requests merge in the correct order, remove redundant builds, and reduce flaky merges.

{:toc}

## Before you start

Familiarize yourself with [managing a merge queue in GitHub](https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/configuring-pull-request-merges/managing-a-merge-queue).

## Trigger builds from the merge queue

You need to update the pipeline configuration to run builds when a branch begins with a special prefix from GitHub.

To trigger builds from the merge queue:

1. From your Buildkite dashboard, select your pipeline.
1. Select _Pipeline Settings_ > _GitHub_.
1. In the _Branch Limiting_ section, add a filter for the pattern: `gh-readonly-queue/{base_branch}/*`.

## Skip builds with existing commits

Merge queues run the builds for PRs one after another, so they can run a build for the same commit multiple times. To avoid that redundancy, update the pipeline configuration to skip builds with existing commits.

To skip a build with existing commits:

1. Remain in _Pipeline Settings_ > _GitHub_ for your pipeline.
1. In the _GitHub Settings_ section, select the _Skip builds with existing commits_ checkbox.

That's it! Your pipeline supports merge queues in GitHub. ðŸŽ‰